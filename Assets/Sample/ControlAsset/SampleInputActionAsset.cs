//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.1.1
//     from Assets/Sample/ControlAsset/SampleInputActionAsset.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @SampleInputActionAsset : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @SampleInputActionAsset()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""SampleInputActionAsset"",
    ""maps"": [
        {
            ""name"": ""PCActions"",
            ""id"": ""2470ce5c-1c54-4aa1-bc4c-eb6d1dd818bb"",
            ""actions"": [
                {
                    ""name"": ""Shoot"",
                    ""type"": ""Button"",
                    ""id"": ""bcc598d7-7416-4947-86f2-2c633571e34d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""13a94ca6-1fd0-4084-902d-649b9cb7dd88"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""2b35a5c8-b3e8-45fe-b351-51ac3dc5d974"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""00fa0590-8baf-434b-ba99-87682ce4fc29"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Look"",
                    ""type"": ""PassThrough"",
                    ""id"": ""40d3393b-e4ff-43e0-88d5-a2b8410c09bd"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""5a568ef1-99ca-479e-893a-9e01ce5cae7c"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Shoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2fb54a2d-a1f3-47bc-84ce-975ef02370ef"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Shoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c375bb48-4625-4a0a-bfb8-62bff0aa9251"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b6bf0920-74b0-4e6a-a118-ea3cf99c92bb"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""441b0a43-c2fc-4212-b8ee-48d9b49a2767"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""5dc15056-72fa-40e6-9574-6a16a4ea3ffa"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""d7184920-fd9a-4866-9b0a-9ee419c83b95"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""ce2d43db-1be0-4a1f-8f22-887cde3a0c1a"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""314894c3-e061-41eb-9803-79dd308801f7"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""2D Vector"",
                    ""id"": ""b99e8045-f117-4f6e-add3-6de658c87fe0"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""fc9c8dad-a6be-4874-a556-e16c204ecf21"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""5a579ddb-d64b-40db-9f86-0a2264bcbd58"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""25ace080-d6d9-40c4-ae73-c47cf330a432"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""b2eaf369-eb52-4249-987b-a0e85db26b76"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""fb316f2f-a450-4229-b07a-9dcb9ba2877f"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4b7fb0eb-27f4-4c23-b3a0-ae9807b3d16d"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""GamePadActions"",
            ""id"": ""1dcf0802-6775-4d6e-88a3-51b0dce8a81d"",
            ""actions"": [
                {
                    ""name"": ""Shoot"",
                    ""type"": ""Button"",
                    ""id"": ""f31c8c43-afe0-4f5a-91c9-5163777f59d2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""9f4afd8b-236a-4b0c-a0ae-79458d4c4ecc"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Movement"",
                    ""type"": ""Value"",
                    ""id"": ""5250025c-29df-4578-ae4f-07182709c461"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Interact"",
                    ""type"": ""Button"",
                    ""id"": ""098b9a3a-352f-409d-8870-10d2cd09607a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Look"",
                    ""type"": ""PassThrough"",
                    ""id"": ""6f88c501-e396-41df-857d-ea3d8a1593d8"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""48767c03-1e21-41e4-84a5-d8f37709caec"",
                    ""path"": ""<Gamepad>/rightTrigger"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Shoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1dcf9e46-cdb3-4375-9095-4305e5c3d4d8"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Shoot"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""e5cef1b8-4a71-4407-b021-bd2dfd456eb8"",
                    ""path"": ""<Gamepad>/buttonSouth"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""470e617a-7a64-43d1-9d9f-e43b7b3fd96e"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""395c84f0-6e6a-4c08-8dd7-eb5252373668"",
                    ""path"": ""<Gamepad>/buttonWest"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fbce0284-ce46-46e2-98f7-63b12f173eb6"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Interact"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""349e42ac-d00e-4577-ae9d-2bd9c8cb78a3"",
                    ""path"": ""<Gamepad>/leftStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Movement"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b6f58837-e61e-4fe8-ad1a-abac1c4b820c"",
                    ""path"": ""<Gamepad>/rightStick"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Look"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""System"",
            ""id"": ""06e73146-30a4-4ca8-b72d-a1534211b584"",
            ""actions"": [
                {
                    ""name"": ""New action"",
                    ""type"": ""Button"",
                    ""id"": ""2d5377bc-085a-41d4-bc19-928c89f3764d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""17826ed3-5a1d-4cd6-899b-16f447cf12bd"",
                    ""path"": """",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""New action"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // PCActions
        m_PCActions = asset.FindActionMap("PCActions", throwIfNotFound: true);
        m_PCActions_Shoot = m_PCActions.FindAction("Shoot", throwIfNotFound: true);
        m_PCActions_Jump = m_PCActions.FindAction("Jump", throwIfNotFound: true);
        m_PCActions_Movement = m_PCActions.FindAction("Movement", throwIfNotFound: true);
        m_PCActions_Interact = m_PCActions.FindAction("Interact", throwIfNotFound: true);
        m_PCActions_Look = m_PCActions.FindAction("Look", throwIfNotFound: true);
        // GamePadActions
        m_GamePadActions = asset.FindActionMap("GamePadActions", throwIfNotFound: true);
        m_GamePadActions_Shoot = m_GamePadActions.FindAction("Shoot", throwIfNotFound: true);
        m_GamePadActions_Jump = m_GamePadActions.FindAction("Jump", throwIfNotFound: true);
        m_GamePadActions_Movement = m_GamePadActions.FindAction("Movement", throwIfNotFound: true);
        m_GamePadActions_Interact = m_GamePadActions.FindAction("Interact", throwIfNotFound: true);
        m_GamePadActions_Look = m_GamePadActions.FindAction("Look", throwIfNotFound: true);
        // System
        m_System = asset.FindActionMap("System", throwIfNotFound: true);
        m_System_Newaction = m_System.FindAction("New action", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // PCActions
    private readonly InputActionMap m_PCActions;
    private IPCActionsActions m_PCActionsActionsCallbackInterface;
    private readonly InputAction m_PCActions_Shoot;
    private readonly InputAction m_PCActions_Jump;
    private readonly InputAction m_PCActions_Movement;
    private readonly InputAction m_PCActions_Interact;
    private readonly InputAction m_PCActions_Look;
    public struct PCActionsActions
    {
        private @SampleInputActionAsset m_Wrapper;
        public PCActionsActions(@SampleInputActionAsset wrapper) { m_Wrapper = wrapper; }
        public InputAction @Shoot => m_Wrapper.m_PCActions_Shoot;
        public InputAction @Jump => m_Wrapper.m_PCActions_Jump;
        public InputAction @Movement => m_Wrapper.m_PCActions_Movement;
        public InputAction @Interact => m_Wrapper.m_PCActions_Interact;
        public InputAction @Look => m_Wrapper.m_PCActions_Look;
        public InputActionMap Get() { return m_Wrapper.m_PCActions; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PCActionsActions set) { return set.Get(); }
        public void SetCallbacks(IPCActionsActions instance)
        {
            if (m_Wrapper.m_PCActionsActionsCallbackInterface != null)
            {
                @Shoot.started -= m_Wrapper.m_PCActionsActionsCallbackInterface.OnShoot;
                @Shoot.performed -= m_Wrapper.m_PCActionsActionsCallbackInterface.OnShoot;
                @Shoot.canceled -= m_Wrapper.m_PCActionsActionsCallbackInterface.OnShoot;
                @Jump.started -= m_Wrapper.m_PCActionsActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_PCActionsActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_PCActionsActionsCallbackInterface.OnJump;
                @Movement.started -= m_Wrapper.m_PCActionsActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_PCActionsActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_PCActionsActionsCallbackInterface.OnMovement;
                @Interact.started -= m_Wrapper.m_PCActionsActionsCallbackInterface.OnInteract;
                @Interact.performed -= m_Wrapper.m_PCActionsActionsCallbackInterface.OnInteract;
                @Interact.canceled -= m_Wrapper.m_PCActionsActionsCallbackInterface.OnInteract;
                @Look.started -= m_Wrapper.m_PCActionsActionsCallbackInterface.OnLook;
                @Look.performed -= m_Wrapper.m_PCActionsActionsCallbackInterface.OnLook;
                @Look.canceled -= m_Wrapper.m_PCActionsActionsCallbackInterface.OnLook;
            }
            m_Wrapper.m_PCActionsActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Shoot.started += instance.OnShoot;
                @Shoot.performed += instance.OnShoot;
                @Shoot.canceled += instance.OnShoot;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
                @Interact.started += instance.OnInteract;
                @Interact.performed += instance.OnInteract;
                @Interact.canceled += instance.OnInteract;
                @Look.started += instance.OnLook;
                @Look.performed += instance.OnLook;
                @Look.canceled += instance.OnLook;
            }
        }
    }
    public PCActionsActions @PCActions => new PCActionsActions(this);

    // GamePadActions
    private readonly InputActionMap m_GamePadActions;
    private IGamePadActionsActions m_GamePadActionsActionsCallbackInterface;
    private readonly InputAction m_GamePadActions_Shoot;
    private readonly InputAction m_GamePadActions_Jump;
    private readonly InputAction m_GamePadActions_Movement;
    private readonly InputAction m_GamePadActions_Interact;
    private readonly InputAction m_GamePadActions_Look;
    public struct GamePadActionsActions
    {
        private @SampleInputActionAsset m_Wrapper;
        public GamePadActionsActions(@SampleInputActionAsset wrapper) { m_Wrapper = wrapper; }
        public InputAction @Shoot => m_Wrapper.m_GamePadActions_Shoot;
        public InputAction @Jump => m_Wrapper.m_GamePadActions_Jump;
        public InputAction @Movement => m_Wrapper.m_GamePadActions_Movement;
        public InputAction @Interact => m_Wrapper.m_GamePadActions_Interact;
        public InputAction @Look => m_Wrapper.m_GamePadActions_Look;
        public InputActionMap Get() { return m_Wrapper.m_GamePadActions; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(GamePadActionsActions set) { return set.Get(); }
        public void SetCallbacks(IGamePadActionsActions instance)
        {
            if (m_Wrapper.m_GamePadActionsActionsCallbackInterface != null)
            {
                @Shoot.started -= m_Wrapper.m_GamePadActionsActionsCallbackInterface.OnShoot;
                @Shoot.performed -= m_Wrapper.m_GamePadActionsActionsCallbackInterface.OnShoot;
                @Shoot.canceled -= m_Wrapper.m_GamePadActionsActionsCallbackInterface.OnShoot;
                @Jump.started -= m_Wrapper.m_GamePadActionsActionsCallbackInterface.OnJump;
                @Jump.performed -= m_Wrapper.m_GamePadActionsActionsCallbackInterface.OnJump;
                @Jump.canceled -= m_Wrapper.m_GamePadActionsActionsCallbackInterface.OnJump;
                @Movement.started -= m_Wrapper.m_GamePadActionsActionsCallbackInterface.OnMovement;
                @Movement.performed -= m_Wrapper.m_GamePadActionsActionsCallbackInterface.OnMovement;
                @Movement.canceled -= m_Wrapper.m_GamePadActionsActionsCallbackInterface.OnMovement;
                @Interact.started -= m_Wrapper.m_GamePadActionsActionsCallbackInterface.OnInteract;
                @Interact.performed -= m_Wrapper.m_GamePadActionsActionsCallbackInterface.OnInteract;
                @Interact.canceled -= m_Wrapper.m_GamePadActionsActionsCallbackInterface.OnInteract;
                @Look.started -= m_Wrapper.m_GamePadActionsActionsCallbackInterface.OnLook;
                @Look.performed -= m_Wrapper.m_GamePadActionsActionsCallbackInterface.OnLook;
                @Look.canceled -= m_Wrapper.m_GamePadActionsActionsCallbackInterface.OnLook;
            }
            m_Wrapper.m_GamePadActionsActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Shoot.started += instance.OnShoot;
                @Shoot.performed += instance.OnShoot;
                @Shoot.canceled += instance.OnShoot;
                @Jump.started += instance.OnJump;
                @Jump.performed += instance.OnJump;
                @Jump.canceled += instance.OnJump;
                @Movement.started += instance.OnMovement;
                @Movement.performed += instance.OnMovement;
                @Movement.canceled += instance.OnMovement;
                @Interact.started += instance.OnInteract;
                @Interact.performed += instance.OnInteract;
                @Interact.canceled += instance.OnInteract;
                @Look.started += instance.OnLook;
                @Look.performed += instance.OnLook;
                @Look.canceled += instance.OnLook;
            }
        }
    }
    public GamePadActionsActions @GamePadActions => new GamePadActionsActions(this);

    // System
    private readonly InputActionMap m_System;
    private ISystemActions m_SystemActionsCallbackInterface;
    private readonly InputAction m_System_Newaction;
    public struct SystemActions
    {
        private @SampleInputActionAsset m_Wrapper;
        public SystemActions(@SampleInputActionAsset wrapper) { m_Wrapper = wrapper; }
        public InputAction @Newaction => m_Wrapper.m_System_Newaction;
        public InputActionMap Get() { return m_Wrapper.m_System; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(SystemActions set) { return set.Get(); }
        public void SetCallbacks(ISystemActions instance)
        {
            if (m_Wrapper.m_SystemActionsCallbackInterface != null)
            {
                @Newaction.started -= m_Wrapper.m_SystemActionsCallbackInterface.OnNewaction;
                @Newaction.performed -= m_Wrapper.m_SystemActionsCallbackInterface.OnNewaction;
                @Newaction.canceled -= m_Wrapper.m_SystemActionsCallbackInterface.OnNewaction;
            }
            m_Wrapper.m_SystemActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Newaction.started += instance.OnNewaction;
                @Newaction.performed += instance.OnNewaction;
                @Newaction.canceled += instance.OnNewaction;
            }
        }
    }
    public SystemActions @System => new SystemActions(this);
    public interface IPCActionsActions
    {
        void OnShoot(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnMovement(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
        void OnLook(InputAction.CallbackContext context);
    }
    public interface IGamePadActionsActions
    {
        void OnShoot(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnMovement(InputAction.CallbackContext context);
        void OnInteract(InputAction.CallbackContext context);
        void OnLook(InputAction.CallbackContext context);
    }
    public interface ISystemActions
    {
        void OnNewaction(InputAction.CallbackContext context);
    }
}
